


ARM Macro Assembler    Page 1 CMPE Iteration and Subroutines


    1 00000000                 TTL              CMPE Iteration and Subroutines
    2 00000000         ;****************************************************************
    3 00000000         ; This program uses a subroutine to perform a division operation
    4 00000000         ;Name:  Dean Trivisani
    5 00000000         ;Date:  9/19/17
    6 00000000         ;Class:  CMPE-250
    7 00000000         ;Section:  02 Tuesday 11:00am
    8 00000000         ;---------------------------------------------------------------
    9 00000000         ;Keil Simulator Template for KL46
   10 00000000         ;R. W. Melton
   11 00000000         ;January 23, 2015
   12 00000000         ;****************************************************************
   13 00000000         ;Assembler directives
   14 00000000                 THUMB
   16 00000000         ;****************************************************************
   17 00000000         ;EQUates
   18 00000000 00000019 
                       MAX_DATA
                               EQU              25
   19 00000000         ;Vectors
   20 00000000 000000C0 
                       VECTOR_TABLE_SIZE
                               EQU              0x000000C0
   21 00000000 00000004 
                       VECTOR_SIZE
                               EQU              4           ;Bytes per vector
   22 00000000         ;Stack
   23 00000000 00000100 
                       SSTACK_SIZE
                               EQU              0x00000100
   24 00000000         ;****************************************************************
   25 00000000         ;Program
   26 00000000         ;Linker requires Reset_Handler
   27 00000000                 AREA             MyCode,CODE,READONLY
   28 00000000                 ENTRY
   29 00000000                 EXPORT           Reset_Handler
   30 00000000                 IMPORT           InitData
   31 00000000                 IMPORT           LoadData
   32 00000000                 IMPORT           TestData
   33 00000000         Reset_Handler
                               PROC             {},{}
   34 00000000         main



ARM Macro Assembler    Page 2 CMPE Iteration and Subroutines


   35 00000000         ;---------------------------------------------------------------
   36 00000000         ;>>>>> begin main program code <<<<<
   37 00000000         ;Disable interrupts
   38 00000000 B672            CPSID            I
   39 00000002         
   40 00000002 F7FF FFFE       BL               InitData    ;data initialization subroutine  
   41 00000006         DIV_START
   42 00000006 F7FF FFFE       BL               LoadData    ;subroutine that loads P and Q
   43 0000000A 4F1B            ldr              R7,=butts
   44 0000000C         
   45 0000000C D214            BCS              QUIT        ;Exit if carry flag is set
   46 0000000E         ;load addresses of p and q
   47 0000000E 491B            LDR              R1,=P
   48 00000010 481B            LDR              R0,=Q
   49 00000012         ;initialize registers
   50 00000012 6800            LDR              R0,[R0,#0]
   51 00000014 6809            LDR              R1,[R1,#0]
   52 00000016         
   53 00000016 F7FF FFFE       BL               DIVU        ;division subroutine
   54 0000001A         
   55 0000001A D300            BCC              VALID       ;If carry is clear, answer is valid, store it
   56 0000001C D204            BCS              INVALID     ;if carry is set, answer is invalid, set P and Q to 0xFFFFFF
                                                            FF
   57 0000001E         
   58 0000001E         VALID
   59 0000001E         ;load adresses of p and q
   60 0000001E 4A17            LDR              R2,=P
   61 00000020 4B17            LDR              R3,=Q
   62 00000022         ;set P and Q to the R0 and R1
   63 00000022 6010            STR              R0,[R2,#0]
   64 00000024 6019            STR              R1,[R3,#0]
   65 00000026 E004            B                RUNTEST
   66 00000028         INVALID
   67 00000028         ;load adresses of p and q
   68 00000028 4A14            LDR              R2,=P
   69 0000002A 4B15            LDR              R3,=Q
   70 0000002C         ;set P and Q to 0xFFFFFFFF
   71 0000002C 4C19            LDR              R4,=0xFFFFFFFF
   72 0000002E 6014            STR              R4,[R2,#0]
   73 00000030 601C            STR              R4,[R3,#0]
   74 00000032         
   75 00000032         RUNTEST



ARM Macro Assembler    Page 3 CMPE Iteration and Subroutines


   76 00000032 F7FF FFFE       BL               TestData
   77 00000036         
   78 00000036 E7E6            B                DIV_START
   79 00000038         
   80 00000038         
   81 00000038         QUIT
   82 00000038         ;>>>>>   end main program code <<<<<
   83 00000038         ;Stay here
   84 00000038 E7FE            B                .
   85 0000003A                 ENDP
   86 0000003A         ;---------------------------------------------------------------
   87 0000003A         ;>>>>> begin subroutine code <<<<<
   88 0000003A         
   89 0000003A         DIVU    PROC             {R2-R14},{}
   90 0000003A         ;Computes R1 / R0 into R0 remainder R1 
   91 0000003A B418            PUSH             {R3,R4}     ; store values of R3 and R4
   92 0000003C         
   93 0000003C 2800            CMP              R0, #0      ;compare divisor to 0
   94 0000003E D002            BEQ              SET_CAR     ;if divisor is 0, go to special case
   95 00000040 2900            CMP              R1, #0      ;compare dividend to zero
   96 00000042 D00E            BEQ              ZERODIV     ;if dividend is 0, 
   97 00000044 E007            B                BRK         ;go to special case
   98 00000046         SET_CAR
   99 00000046 F3EF 8300       MRS              R3,APSR     ;set C flag to 1
  100 0000004A 2420            MOVS             R4,#0x20
  101 0000004C 0624            LSLS             R4,R4,#24
  102 0000004E 4323            ORRS             R3,R3,R4
  103 00000050 F383 8800       MSR              APSR,R3
  104 00000054 E00E            B                ENDDIV
  105 00000056         BRK
  106 00000056 2300            MOVS             R3, #0      ;put quotient in R3
  107 00000058         
  108 00000058         DIVWHILE
  109 00000058 4288            CMP              R0, R1      ;compare R0 and R1
  110 0000005A D803            BHI              ENDDIVWHILE ;if R0<R1 exit the loop
  111 0000005C 1C5B            ADDS             R3, R3, #1  ;quotient ++
  112 0000005E 1A09            SUBS             R1, R1, R0  ;R1 = R1 - R0
  113 00000060 E7FA            B                DIVWHILE
  114 00000062         
  115 00000062         ZERODIV
  116 00000062 2300            MOVS             R3,#0       ;IF dividend is zero, remainder is always zero
  117 00000064         ENDDIVWHILE



ARM Macro Assembler    Page 4 CMPE Iteration and Subroutines


  118 00000064 0018            MOVS             R0, R3      ;R0 <- quotient, remainder = R1
  119 00000066 F3EF 8300       MRS              R3,APSR     ;clear C flag to 0
  120 0000006A 2420            MOVS             R4,#0x20
  121 0000006C 0624            LSLS             R4,R4,#24
  122 0000006E 43A3            BICS             R3,R3,R4
  123 00000070 F383 8800       MSR              APSR,R3
  124 00000074         
  125 00000074         ENDDIV
  126 00000074 BC18            POP              {R3,R4}     ;clear changes from registers
  127 00000076 4770            BX               LR          ;quit subroutine
  128 00000078                 ENDP
  129 00000078         ;>>>>>   end subroutine code <<<<<
  130 00000078                 ALIGN
  131 00000078         ;****************************************************************
  132 00000078         ;Vector Table Mapped to Address 0 at Reset
  133 00000078         ;Linker requires __Vectors to be exported
  134 00000078 00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              FFFFFFFF         AREA             RESET, DATA, READONLY
  135 00000000                 EXPORT           __Vectors
  136 00000000                 EXPORT           __Vectors_End
  137 00000000                 EXPORT           __Vectors_Size
  138 00000000         __Vectors
  139 00000000         ;ARM core vectors
  140 00000000 00000000        DCD              __initial_sp ;00:end of stack
  141 00000004 00000000        DCD              Reset_Handler ;reset vector
  142 00000008 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 5 CMPE Iteration and Subroutines


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 6 CMPE Iteration and Subroutines


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00               SPACE            (VECTOR_TABLE_SIZE - (2 * VECTOR_SIZE))
  143 000000C0         __Vectors_End
  144 000000C0 000000C0 
                       __Vectors_Size
                               EQU              __Vectors_End - __Vectors
  145 000000C0                 ALIGN
  146 000000C0         ;****************************************************************
  147 000000C0         ;Constants
  148 000000C0                 AREA             MyConst,DATA,READONLY
  149 00000000         ;>>>>> begin constants here <<<<<
  150 00000000 00000005 
                       butts   dcd              0x05
  151 00000004         ;>>>>>   end constants here <<<<<
  152 00000004         ;****************************************************************
  153 00000004                 AREA             |.ARM.__at_0x1FFFE000|,DATA,READWRITE,ALIGN=3
  154 00000000                 EXPORT           __initial_sp
  155 00000000                 EXPORT           P
  156 00000000                 EXPORT           Q
  157 00000000                 EXPORT           Results
  158 00000000         ;Allocate system stack
  159 00000000                 IF               :LNOT::DEF:SSTACK_SIZE
  161                          ENDIF
  162 00000000 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 7 CMPE Iteration and Subroutines


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 8 CMPE Iteration and Subroutines


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00       Stack_Mem
                               SPACE            SSTACK_SIZE
  163 00000100         __initial_sp
  164 00000100         ;****************************************************************
  165 00000100         ;Variables
  166 00000100                 AREA             MyData,DATA,READWRITE
  167 00000000         ;>>>>> begin variables here <<<<<
  168 00000000 00 00 00 
              00       P       SPACE            4
  169 00000004 00 00 00 
              00       Q       SPACE            4



ARM Macro Assembler    Page 9 CMPE Iteration and Subroutines


  170 00000008 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00    Results SPACE            50
  171 0000003A         ;>>>>>   end variables here <<<<<
  172 0000003A                 END
Command Line: --debug --xref --length=49 --width=120 --diag_suppress=9931 --cpu=Cortex-M0+ --apcs=interwork --depend=.\o
bjects\exercise04.d -o.\objects\exercise04.o -I.\RTE\_Target_1 -IC:\Keil_v5\ARM\PACK\Keil\Kinetis_KLxx_DFP\1.13.0\Device
\Include -IC:\Keil_v5\ARM\CMSIS\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 524" --predefine
="MKL46Z256xxx4 SETA 1" --list=.\listings\exercise04.lst Exercise04.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

BRK 00000056

Symbol: BRK
   Definitions
      At line 105 in file Exercise04.s
   Uses
      At line 97 in file Exercise04.s
Comment: BRK used once
DIVU 0000003A

Symbol: DIVU
   Definitions
      At line 89 in file Exercise04.s
   Uses
      At line 53 in file Exercise04.s
Comment: DIVU used once
DIVWHILE 00000058

Symbol: DIVWHILE
   Definitions
      At line 108 in file Exercise04.s
   Uses
      At line 113 in file Exercise04.s
Comment: DIVWHILE used once
DIV_START 00000006

Symbol: DIV_START
   Definitions
      At line 41 in file Exercise04.s
   Uses
      At line 78 in file Exercise04.s
Comment: DIV_START used once
ENDDIV 00000074

Symbol: ENDDIV
   Definitions
      At line 125 in file Exercise04.s
   Uses
      At line 104 in file Exercise04.s
Comment: ENDDIV used once
ENDDIVWHILE 00000064




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: ENDDIVWHILE
   Definitions
      At line 117 in file Exercise04.s
   Uses
      At line 110 in file Exercise04.s
Comment: ENDDIVWHILE used once
INVALID 00000028

Symbol: INVALID
   Definitions
      At line 66 in file Exercise04.s
   Uses
      At line 56 in file Exercise04.s
Comment: INVALID used once
MyCode 00000000

Symbol: MyCode
   Definitions
      At line 27 in file Exercise04.s
   Uses
      None
Comment: MyCode unused
QUIT 00000038

Symbol: QUIT
   Definitions
      At line 81 in file Exercise04.s
   Uses
      At line 45 in file Exercise04.s
Comment: QUIT used once
RUNTEST 00000032

Symbol: RUNTEST
   Definitions
      At line 75 in file Exercise04.s
   Uses
      At line 65 in file Exercise04.s
Comment: RUNTEST used once
Reset_Handler 00000000

Symbol: Reset_Handler
   Definitions



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 33 in file Exercise04.s
   Uses
      At line 29 in file Exercise04.s
      At line 141 in file Exercise04.s

SET_CAR 00000046

Symbol: SET_CAR
   Definitions
      At line 98 in file Exercise04.s
   Uses
      At line 94 in file Exercise04.s
Comment: SET_CAR used once
VALID 0000001E

Symbol: VALID
   Definitions
      At line 58 in file Exercise04.s
   Uses
      At line 55 in file Exercise04.s
Comment: VALID used once
ZERODIV 00000062

Symbol: ZERODIV
   Definitions
      At line 115 in file Exercise04.s
   Uses
      At line 96 in file Exercise04.s
Comment: ZERODIV used once
main 00000000

Symbol: main
   Definitions
      At line 34 in file Exercise04.s
   Uses
      None
Comment: main unused
15 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

RESET 00000000

Symbol: RESET
   Definitions
      At line 134 in file Exercise04.s
   Uses
      None
Comment: RESET unused
__Vectors 00000000

Symbol: __Vectors
   Definitions
      At line 138 in file Exercise04.s
   Uses
      At line 135 in file Exercise04.s
      At line 144 in file Exercise04.s

__Vectors_End 000000C0

Symbol: __Vectors_End
   Definitions
      At line 143 in file Exercise04.s
   Uses
      At line 136 in file Exercise04.s
      At line 144 in file Exercise04.s

3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

MyConst 00000000

Symbol: MyConst
   Definitions
      At line 148 in file Exercise04.s
   Uses
      None
Comment: MyConst unused
butts 00000000

Symbol: butts
   Definitions
      At line 150 in file Exercise04.s
   Uses
      At line 43 in file Exercise04.s
Comment: butts used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.ARM.__at_0x1FFFE000 00000000

Symbol: .ARM.__at_0x1FFFE000
   Definitions
      At line 153 in file Exercise04.s
   Uses
      None
Comment: .ARM.__at_0x1FFFE000 unused
Stack_Mem 00000000

Symbol: Stack_Mem
   Definitions
      At line 162 in file Exercise04.s
   Uses
      None
Comment: Stack_Mem unused
__initial_sp 00000100

Symbol: __initial_sp
   Definitions
      At line 163 in file Exercise04.s
   Uses
      At line 140 in file Exercise04.s
      At line 154 in file Exercise04.s

3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

MyData 00000000

Symbol: MyData
   Definitions
      At line 166 in file Exercise04.s
   Uses
      None
Comment: MyData unused
P 00000000

Symbol: P
   Definitions
      At line 168 in file Exercise04.s
   Uses
      At line 47 in file Exercise04.s
      At line 60 in file Exercise04.s
      At line 68 in file Exercise04.s
      At line 155 in file Exercise04.s

Q 00000004

Symbol: Q
   Definitions
      At line 169 in file Exercise04.s
   Uses
      At line 48 in file Exercise04.s
      At line 61 in file Exercise04.s
      At line 69 in file Exercise04.s
      At line 156 in file Exercise04.s

Results 00000008

Symbol: Results
   Definitions
      At line 170 in file Exercise04.s
   Uses
      At line 157 in file Exercise04.s
Comment: Results used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

MAX_DATA 00000019

Symbol: MAX_DATA
   Definitions
      At line 18 in file Exercise04.s
   Uses
      None
Comment: MAX_DATA unused
SSTACK_SIZE 00000100

Symbol: SSTACK_SIZE
   Definitions
      At line 23 in file Exercise04.s
   Uses
      At line 162 in file Exercise04.s
Comment: SSTACK_SIZE used once
VECTOR_SIZE 00000004

Symbol: VECTOR_SIZE
   Definitions
      At line 21 in file Exercise04.s
   Uses
      At line 142 in file Exercise04.s
Comment: VECTOR_SIZE used once
VECTOR_TABLE_SIZE 000000C0

Symbol: VECTOR_TABLE_SIZE
   Definitions
      At line 20 in file Exercise04.s
   Uses
      At line 142 in file Exercise04.s
Comment: VECTOR_TABLE_SIZE used once
__Vectors_Size 000000C0

Symbol: __Vectors_Size
   Definitions
      At line 144 in file Exercise04.s
   Uses
      At line 137 in file Exercise04.s
Comment: __Vectors_Size used once
5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

InitData 00000000

Symbol: InitData
   Definitions
      At line 30 in file Exercise04.s
   Uses
      At line 40 in file Exercise04.s
Comment: InitData used once
LoadData 00000000

Symbol: LoadData
   Definitions
      At line 31 in file Exercise04.s
   Uses
      At line 42 in file Exercise04.s
Comment: LoadData used once
TestData 00000000

Symbol: TestData
   Definitions
      At line 32 in file Exercise04.s
   Uses
      At line 76 in file Exercise04.s
Comment: TestData used once
3 symbols
370 symbols in table
