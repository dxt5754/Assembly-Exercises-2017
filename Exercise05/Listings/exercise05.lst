


ARM Macro Assembler    Page 1 Polled Serial I/O


    1 00000000                 TTL              Polled Serial I/O
    2 00000000         ;****************************************************************
    3 00000000         ;Sends and receives character input via UART0
    4 00000000         ;Name:  Dean Trivisani
    5 00000000         ;Date:  10/2/2017
    6 00000000         ;Class:  CMPE-250
    7 00000000         ;Section:  01L5
    8 00000000         ;---------------------------------------------------------------
    9 00000000         ;Keil Template for KL46
   10 00000000         ;R. W. Melton
   11 00000000         ;September 25, 2017
   12 00000000         ;****************************************************************
   13 00000000         ;Assembler directives
   14 00000000                 THUMB
   16 00000000         ;****************************************************************
   17 00000000         ;Include files
   18 00000000                 GET              MKL46Z4.s   ;Included by start.s
   20 00000000         ;****************************************************************
   21 00000000         ;EQUates
   22 00000000         
   23 00000000         ;---------------------------------------------------------------
   24 00000000         ;PORTx_PCRn (Port x pin control register n [for pin n])
   25 00000000         ;___->10-08:Pin mux control (select 0 to 8)
   26 00000000         ;Use provided PORT_PCR_MUX_SELECT_2_MASK
   27 00000000         ;---------------------------------------------------------------
   28 00000000         ;Port A
   30 00000000 01000200 
                       PORT_PCR_SET_PTA1_UART0_RX
                               EQU              (PORT_PCR_ISF_MASK :OR:                                    PORT_PCR_MUX
_SELECT_2_MASK)
   32 00000000 01000200 
                       PORT_PCR_SET_PTA2_UART0_TX
                               EQU              (PORT_PCR_ISF_MASK :OR:                                    PORT_PCR_MUX
_SELECT_2_MASK)
   33 00000000         ;---------------------------------------------------------------
   34 00000000         ;SIM_SCGC4
   35 00000000         ;1->10:UART0 clock gate control (enabled)
   36 00000000         ;Use provided SIM_SCGC4_UART0_MASK
   37 00000000         ;---------------------------------------------------------------
   38 00000000         ;SIM_SCGC5
   39 00000000         ;1->09:Port A clock gate control (enabled)
   40 00000000         ;Use provided SIM_SCGC5_PORTA_MASK



ARM Macro Assembler    Page 2 Polled Serial I/O


   41 00000000         ;---------------------------------------------------------------
   42 00000000         ;SIM_SOPT2
   43 00000000         ;01=27-26:UART0SRC=UART0 clock source select
   44 00000000         ;         (PLLFLLSEL determines MCGFLLCLK' or MCGPLLCLK/2)
   45 00000000         ; 1=   16:PLLFLLSEL=PLL/FLL clock select (MCGPLLCLK/2)
   47 00000000 04000000 
                       SIM_SOPT2_UART0SRC_MCGPLLCLK
                               EQU              (1 << SIM_SOPT2_UART0SRC_SHIFT)
   49 00000000 04010000 
                       SIM_SOPT2_UART0_MCGPLLCLK_DIV2
                               EQU              (SIM_SOPT2_UART0SRC_MCGPLLCLK :OR: SIM_SOPT2_PLLFLLSEL_MASK)
   50 00000000         ;---------------------------------------------------------------
   51 00000000         ;SIM_SOPT5
   52 00000000         ; 0->   16:UART0 open drain enable (disabled)
   53 00000000         ; 0->   02:UART0 receive data select (UART0_RX)
   54 00000000         ;00->01-00:UART0 transmit data select source (UART0_TX)
   58 00000000 00010007 
                       SIM_SOPT5_UART0_EXTERN_MASK_CLEAR
                               EQU              (SIM_SOPT5_UART0ODE_MASK :OR:                                  SIM_SOPT
5_UART0RXSRC_MASK :OR:                                  SIM_SOPT5_UART0TXSRC_MASK)
   59 00000000         ;---------------------------------------------------------------
   60 00000000         ;UART0_BDH
   61 00000000         ;    0->  7:LIN break detect IE (disabled)
   62 00000000         ;    0->  6:RxD input active edge IE (disabled)
   63 00000000         ;    0->  5:Stop bit number select (1)
   64 00000000         ;00001->4-0:SBR[12:0] (UART0CLK / [9600 * (OSR + 1)]) 
   65 00000000         ;UART0CLK is MCGPLLCLK/2
   66 00000000         ;MCGPLLCLK is 96 MHz
   67 00000000         ;MCGPLLCLK/2 is 48 MHz
   68 00000000         ;SBR = 48 MHz / (9600 * 16) = 312.5 --> 312 = 0x138
   69 00000000 00000001 
                       UART0_BDH_9600
                               EQU              0x01
   70 00000000         ;---------------------------------------------------------------
   71 00000000         ;UART0_BDL
   72 00000000         ;0x38->7-0:SBR[7:0] (UART0CLK / [9600 * (OSR + 1)])
   73 00000000         ;UART0CLK is MCGPLLCLK/2
   74 00000000         ;MCGPLLCLK is 96 MHz
   75 00000000         ;MCGPLLCLK/2 is 48 MHz
   76 00000000         ;SBR = 48 MHz / (9600 * 16) = 312.5 --> 312 = 0x138
   77 00000000 00000038 
                       UART0_BDL_9600



ARM Macro Assembler    Page 3 Polled Serial I/O


                               EQU              0x38
   78 00000000         ;---------------------------------------------------------------
   79 00000000         ;UART0_C1
   80 00000000         ;0-->7:LOOPS=loops select (normal)
   81 00000000         ;0-->6:DOZEEN=doze enable (disabled)
   82 00000000         ;0-->5:RSRC=receiver source select (internal--no effect LOOPS=0)
   83 00000000         ;0-->4:M=9- or 8-bit mode select 
   84 00000000         ;        (1 start, 8 data [lsb first], 1 stop)
   85 00000000         ;0-->3:WAKE=receiver wakeup method select (idle)
   86 00000000         ;0-->2:IDLE=idle line type select (idle begins after start bit)
   87 00000000         ;0-->1:PE=parity enable (disabled)
   88 00000000         ;0-->0:PT=parity type (even parity--no effect PE=0)
   89 00000000 00000000 
                       UART0_C1_8N1
                               EQU              0x00
   90 00000000         ;---------------------------------------------------------------
   91 00000000         ;UART0_C2
   92 00000000         ;0-->7:TIE=transmit IE for TDRE (disabled)
   93 00000000         ;0-->6:TCIE=transmission complete IE for TC (disabled)
   94 00000000         ;0-->5:RIE=receiver IE for RDRF (disabled)
   95 00000000         ;0-->4:ILIE=idle line IE for IDLE (disabled)
   96 00000000         ;1-->3:TE=transmitter enable (enabled)
   97 00000000         ;1-->2:RE=receiver enable (enabled)
   98 00000000         ;0-->1:RWU=receiver wakeup control (normal)
   99 00000000         ;0-->0:SBK=send break (disabled, normal)
  100 00000000 0000000C 
                       UART0_C2_T_R
                               EQU              (UART0_C2_TE_MASK :OR: UART0_C2_RE_MASK)
  101 00000000         ;---------------------------------------------------------------
  102 00000000         ;UART0_C3
  103 00000000         ;0-->7:R8T9=9th data bit for receiver (not used M=0)
  104 00000000         ;           10th data bit for transmitter (not used M10=0)
  105 00000000         ;0-->6:R9T8=9th data bit for transmitter (not used M=0)
  106 00000000         ;           10th data bit for receiver (not used M10=0)
  107 00000000         ;0-->5:TXDIR=UART_TX pin direction in single-wire mode
  108 00000000         ;            (no effect LOOPS=0)
  109 00000000         ;0-->4:TXINV=transmit data inversion (not inverted)
  110 00000000         ;0-->3:ORIE=overrun IE for OR (disabled)
  111 00000000         ;0-->2:NEIE=noise error IE for NF (disabled)
  112 00000000         ;0-->1:FEIE=framing error IE for FE (disabled)
  113 00000000         ;0-->0:PEIE=parity error IE for PF (disabled)
  114 00000000 00000000 



ARM Macro Assembler    Page 4 Polled Serial I/O


                       UART0_C3_NO_TXINV
                               EQU              0x00
  115 00000000         ;---------------------------------------------------------------
  116 00000000         ;UART0_C4
  117 00000000         ;    0-->  7:MAEN1=match address mode enable 1 (disabled)
  118 00000000         ;    0-->  6:MAEN2=match address mode enable 2 (disabled)
  119 00000000         ;    0-->  5:M10=10-bit mode select (not selected)
  120 00000000         ;01111-->4-0:OSR=over sampling ratio (16)
  121 00000000         ;               = 1 + OSR for 3 <= OSR <= 31
  122 00000000         ;               = 16 for 0 <= OSR <= 2 (invalid values)
  123 00000000 0000000F 
                       UART0_C4_OSR_16
                               EQU              0x0F
  124 00000000 0000000F 
                       UART0_C4_NO_MATCH_OSR_16
                               EQU              UART0_C4_OSR_16
  125 00000000         ;---------------------------------------------------------------
  126 00000000         ;UART0_C5
  127 00000000         ;  0-->  7:TDMAE=transmitter DMA enable (disabled)
  128 00000000         ;  0-->  6:Reserved; read-only; always 0
  129 00000000         ;  0-->  5:RDMAE=receiver full DMA enable (disabled)
  130 00000000         ;000-->4-2:Reserved; read-only; always 0
  131 00000000         ;  0-->  1:BOTHEDGE=both edge sampling (rising edge only)
  132 00000000         ;  0-->  0:RESYNCDIS=resynchronization disable (enabled)
  133 00000000 00000000 
                       UART0_C5_NO_DMA_SSR_SYNC
                               EQU              0x00
  134 00000000         ;---------------------------------------------------------------
  135 00000000         ;UART0_S1
  136 00000000         ;0-->7:TDRE=transmit data register empty flag; read-only
  137 00000000         ;0-->6:TC=transmission complete flag; read-only
  138 00000000         ;0-->5:RDRF=receive data register full flag; read-only
  139 00000000         ;1-->4:IDLE=idle line flag; write 1 to clear (clear)
  140 00000000         ;1-->3:OR=receiver overrun flag; write 1 to clear (clear)
  141 00000000         ;1-->2:NF=noise flag; write 1 to clear (clear)
  142 00000000         ;1-->1:FE=framing error flag; write 1 to clear (clear)
  143 00000000         ;1-->0:PF=parity error flag; write 1 to clear (clear)
  144 00000000 0000001F 
                       UART0_S1_CLEAR_FLAGS
                               EQU              0x1F
  145 00000000         ;---------------------------------------------------------------
  146 00000000         ;UART0_S2



ARM Macro Assembler    Page 5 Polled Serial I/O


  147 00000000         ;1-->7:LBKDIF=LIN break detect interrupt flag (clear)
  148 00000000         ;             write 1 to clear
  149 00000000         ;1-->6:RXEDGIF=RxD pin active edge interrupt flag (clear)
  150 00000000         ;              write 1 to clear
  151 00000000         ;0-->5:(reserved); read-only; always 0
  152 00000000         ;0-->4:RXINV=receive data inversion (disabled)
  153 00000000         ;0-->3:RWUID=receive wake-up idle detect
  154 00000000         ;0-->2:BRK13=break character generation length (10)
  155 00000000         ;0-->1:LBKDE=LIN break detect enable (disabled)
  156 00000000         ;0-->0:RAF=receiver active flag; read-only
  157 00000000 000000C0 
                       UART0_S2_NO_RXINV_BRK10_NO_LBKDETECT_CLEAR_FLAGS
                               EQU              0xC0
  158 00000000         ;---------------------------------------------------------------
  159 00000000         
  160 00000000         
  161 00000000         ;****************************************************************
  162 00000000         ;Program
  163 00000000         ;Linker requires Reset_Handler
  164 00000000                 AREA             MyCode,CODE,READONLY
  165 00000000                 ENTRY
  166 00000000                 EXPORT           Reset_Handler
  167 00000000                 EXPORT           PutChar
  168 00000000                 IMPORT           Carry
  169 00000000                 IMPORT           Negative
  170 00000000                 IMPORT           Overflow
  171 00000000                 IMPORT           PutPrompt
  172 00000000                 IMPORT           Zero
  173 00000000                 IMPORT           Startup
  174 00000000         Reset_Handler
                               PROC             {},{}
  175 00000000         main
  176 00000000         ;---------------------------------------------------------------
  177 00000000         ;Mask interrupts
  178 00000000 B672            CPSID            I
  179 00000002         ;KL46 system startup with 48-MHz system clock
  180 00000002 F7FF FFFE       BL               Startup
  181 00000006         ;---------------------------------------------------------------
  182 00000006         ;>>>>> begin main program code <<<<<           
  183 00000006         ;Initialize
  184 00000006 F000 F82E       BL               Init_UART0_Polling ;Initialize KL46
  185 0000000A         



ARM Macro Assembler    Page 6 Polled Serial I/O


  186 0000000A         ;Make sure the memory is functional and give the user a prompt
  187 0000000A         ;to input a character
  188 0000000A 2101    INPUT   MOVS             R1, #1
  189 0000000C 2901            CMP              R1, #1
  190 0000000E D129            BNE              QUIT
  191 00000010 F7FF FFFE       BL               PutPrompt
  192 00000014         
  193 00000014         ;Print the typed char to the terminal. 
  194 00000014         PRINTEM
  195 00000014 F000 F85D       BL               GetChar
  196 00000018 285A            CMP              R0, #90
  197 0000001A F7FF FFFE       BL               PutChar
  198 0000001E         
  199 0000001E         ;Make sure the case of the char is correct
  200 0000001E DC1D            BGT              MAKECAPS
  201 00000020         
  202 00000020         ;Output the glossary entry associated with the input char
  203 00000020         ;and prompt the user for another char
  204 00000020         ;if the input char does not have an associated entry,
  205 00000020         ;go to a new line and prompt for another char
  206 00000020         CHKCHR
  207 00000020 2843            CMP              R0, #67
  208 00000022 D008            BEQ              CARRY
  209 00000024 284E            CMP              R0, #78
  210 00000026 D009            BEQ              NEGAT
  211 00000028 2856            CMP              R0, #86
  212 0000002A D00A            BEQ              VRFLW
  213 0000002C 285A            CMP              R0, #90
  214 0000002E D00B            BEQ              ZERO
  215 00000030 280D            CMP              R0, #13
  216 00000032 D00C            BEQ              NEWLINE
  217 00000034 E7EE            B                PRINTEM
  218 00000036 F7FF FFFE 
                       CARRY   BL               Carry
  219 0000003A E008            B                NEWLINE
  220 0000003C F7FF FFFE 
                       NEGAT   BL               Negative
  221 00000040 E005            B                NEWLINE
  222 00000042 F7FF FFFE 
                       VRFLW   BL               Overflow
  223 00000046 E002            B                NEWLINE
  224 00000048 F7FF FFFE 



ARM Macro Assembler    Page 7 Polled Serial I/O


                       ZERO    BL               Zero
  225 0000004C E7FF            B                NEWLINE
  226 0000004E         
  227 0000004E         ;New Line w/ chevron
  228 0000004E         NEWLINE
  229 0000004E 2013            MOVS             R0, #0x13
  230 00000050 F7FF FFFE       BL               PutChar
  231 00000054 2010            MOVS             R0, #0x10
  232 00000056 F7FF FFFE       BL               PutChar
  233 0000005A E7D6            B                INPUT
  234 0000005C         ;if a character is lowercase, make it uppercase  
  235 0000005C         MAKECAPS
  236 0000005C 2861            CMP              R0, #97
  237 0000005E DBDF            BLT              CHKCHR
  238 00000060 3820            SUBS             R0, R0, #32
  239 00000062 E7DD            B                CHKCHR
  240 00000064         
  241 00000064         ;>>>>>   end main program code <<<<<
  242 00000064         ;Stay here
  243 00000064         QUIT
  244 00000064 E7FE            B                .
  245 00000066                 ENDP
  246 00000066         ;>>>>> begin subroutine code <<<<<
  247 00000066         ;Initializes the KL46 for polled serial I/O with UART0
  248 00000066         ;through port A pins 1 and 2 using eight data bits,
  249 00000066         ;no parity, and one stop bit at 9600 baud
  250 00000066         
  251 00000066         Init_UART0_Polling
  252 00000066         
  253 00000066         
  254 00000066         ;Store initial values of R0, R1, and R2
  255 00000066 B407            PUSH             {R0,R1,R2}
  256 00000068         ;Select MCGPLLCLK / 2 as UART0 clock source
  257 00000068 4823            LDR              R0,=SIM_SOPT2
  258 0000006A 4924            LDR              R1,=SIM_SOPT2_UART0SRC_MASK
  259 0000006C 6802            LDR              R2,[R0,#0]
  260 0000006E 438A            BICS             R2,R2,R1
  261 00000070 4923            LDR              R1,=SIM_SOPT2_UART0_MCGPLLCLK_DIV2
  262 00000072 430A            ORRS             R2,R2,R1
  263 00000074 6002            STR              R2,[R0,#0]
  264 00000076         ;Enable external connection for UART0
  265 00000076 4823            LDR              R0,=SIM_SOPT5



ARM Macro Assembler    Page 8 Polled Serial I/O


  266 00000078 4923            LDR              R1,= SIM_SOPT5_UART0_EXTERN_MASK_CLEAR
  267 0000007A 6802            LDR              R2,[R0,#0]
  268 0000007C 438A            BICS             R2,R2,R1
  269 0000007E 6002            STR              R2,[R0,#0]
  270 00000080         ;Enable clock for UART0 module
  271 00000080 4822            LDR              R0,=SIM_SCGC4
  272 00000082 4923            LDR              R1,= SIM_SCGC4_UART0_MASK
  273 00000084 6802            LDR              R2,[R0,#0]
  274 00000086 430A            ORRS             R2,R2,R1
  275 00000088 6002            STR              R2,[R0,#0]
  276 0000008A         ;Enable clock for Port A module
  277 0000008A 4822            LDR              R0,=SIM_SCGC5
  278 0000008C 4922            LDR              R1,= SIM_SCGC5_PORTA_MASK
  279 0000008E 6802            LDR              R2,[R0,#0]
  280 00000090 430A            ORRS             R2,R2,R1
  281 00000092 6002            STR              R2,[R0,#0]
  282 00000094         ;Connect PORT A Pin 1 (PTA1) to UART0 Rx (J1 Pin 02)
  283 00000094 4821            LDR              R0,=PORTA_PCR1
  284 00000096 4922            LDR              R1,=PORT_PCR_SET_PTA1_UART0_RX
  285 00000098 6001            STR              R1,[R0,#0]
  286 0000009A         ;Connect PORT A Pin 2 (PTA2) to UART0 Tx (J1 Pin 04)
  287 0000009A 4822            LDR              R0,=PORTA_PCR2
  288 0000009C 4920            LDR              R1,=PORT_PCR_SET_PTA2_UART0_TX
  289 0000009E 6001            STR              R1,[R0,#0]
  290 000000A0         ;Disable UART0 receiver and transmitter
  291 000000A0 4821            LDR              R0,=UART0_BASE
  292 000000A2 210C            MOVS             R1,#UART0_C2_T_R
  293 000000A4 78C2            LDRB             R2,[R0,#UART0_C2_OFFSET]
  294 000000A6 438A            BICS             R2,R2,R1
  295 000000A8 70C2            STRB             R2,[R0,#UART0_C2_OFFSET]
  296 000000AA         ;Set UART0 for 9600 baud, 8N1 protocol
  297 000000AA 2101            MOVS             R1,#UART0_BDH_9600
  298 000000AC 7001            STRB             R1,[R0,#UART0_BDH_OFFSET]
  299 000000AE 2138            MOVS             R1,#UART0_BDL_9600
  300 000000B0 7041            STRB             R1,[R0,#UART0_BDL_OFFSET]
  301 000000B2 2100            MOVS             R1,#UART0_C1_8N1
  302 000000B4 7081            STRB             R1,[R0,#UART0_C1_OFFSET]
  303 000000B6 2100            MOVS             R1,#UART0_C3_NO_TXINV
  304 000000B8 7181            STRB             R1,[R0,#UART0_C3_OFFSET]
  305 000000BA 210F            MOVS             R1,#UART0_C4_NO_MATCH_OSR_16
  306 000000BC 7281            STRB             R1,[R0,#UART0_C4_OFFSET]
  307 000000BE 2100            MOVS             R1,#UART0_C5_NO_DMA_SSR_SYNC



ARM Macro Assembler    Page 9 Polled Serial I/O


  308 000000C0 72C1            STRB             R1,[R0,#UART0_C5_OFFSET]
  309 000000C2 211F            MOVS             R1,#UART0_S1_CLEAR_FLAGS
  310 000000C4 7101            STRB             R1,[R0,#UART0_S1_OFFSET]
  312 000000C6 21C0            MOVS             R1,           #UART0_S2_NO_RXINV_BRK10_NO_LBKDETECT_CLEAR_FLAGS
  313 000000C8 7141            STRB             R1,[R0,#UART0_S2_OFFSET]
  314 000000CA         ;Enable UART0 receiver and transmitter
  315 000000CA 210C            MOVS             R1,#UART0_C2_T_R
  316 000000CC 70C1            STRB             R1,[R0,#UART0_C2_OFFSET]
  317 000000CE         ;Restore original register values
  318 000000CE BC07            POP              {R0,R1,R2}
  319 000000D0 4770            BX               LR
  320 000000D2         
  321 000000D2         ;-------------
  322 000000D2         ;Takes a character from input and stores it in R0
  323 000000D2         ;Inputs: R1, R2, R3
  324 000000D2         ;Outputs: R0
  325 000000D2         ;Register Modifications: R0, R1, R2, R3
  326 000000D2         GetChar
  327 000000D2         
  328 000000D2         ;Store initial values of R1, R1, and R2
  329 000000D2 B40E            PUSH             {R1, R2, R3}
  330 000000D4         ;Poll RDRF until UART0 ready to receive 
  331 000000D4 4914            LDR              R1, =UART0_BASE
  332 000000D6 2220            MOVS             R2, #UART0_S1_RDRF_MASK
  333 000000D8         PollRx
  334 000000D8 790B            LDRB             R3, [R1, #UART0_S1_OFFSET]
  335 000000DA 4013            ANDS             R3, R3, R2
  336 000000DC D0FC            BEQ              PollRx
  337 000000DE         ;Receive character and store in R0
  338 000000DE 79C8            LDRB             R0, [R1, #UART0_D_OFFSET]
  339 000000E0 BC0E            POP              {R1, R2, R3}
  340 000000E2 4770            BX               LR
  341 000000E4         
  342 000000E4         ;Transmits the character stored in R0
  343 000000E4         ;Inputs: R1, R2, R3
  344 000000E4         ;Outputs: R0
  345 000000E4         ;Register Modifications: R0, R1, R2, R3
  346 000000E4         PutChar
  347 000000E4         ;Store initial values of R1, R2, and R3
  348 000000E4 B40E            PUSH             {R1, R2, R3}
  349 000000E6         ;Poll TDRE Until UART0 is ready for transmit
  350 000000E6 4910            LDR              R1, =UART0_BASE



ARM Macro Assembler    Page 10 Polled Serial I/O


  351 000000E8 2280            MOVS             R2, #UART0_S1_TDRE_MASK
  352 000000EA         
  353 000000EA         PollTx
  354 000000EA 790B            LDRB             R3, [R1, #UART0_S1_OFFSET]
  355 000000EC 4013            ANDS             R3, R3, R2
  356 000000EE D0FC            BEQ              PollTx
  357 000000F0         ;Transmit Character Stored in R0
  358 000000F0 71C8            STRB             R0, [R1, #UART0_D_OFFSET]
  359 000000F2         ;Restore original register values
  360 000000F2 BC0E            POP              {R1, R2, R3}
  361 000000F4 4770            BX               LR
  362 000000F6         ;>>>>>   end subroutine code <<<<<
  363 000000F6 00 00           ALIGN
  364 000000F8         ;****************************************************************
  365 000000F8         ;Vector Table Mapped to Address 0 at Reset
  366 000000F8         ;Linker requires __Vectors to be exported
  367 000000F8 40048004 
              0C000000 
              04010000 
              40048010 
              00010007 
              40048034 
              00000400 
              40048038 
              00000200 
              40049004 
              01000200 
              40049008 
              4006A000         AREA             RESET, DATA, READONLY
  368 00000000                 EXPORT           __Vectors
  369 00000000                 EXPORT           __Vectors_End
  370 00000000                 EXPORT           __Vectors_Size
  371 00000000                 IMPORT           __initial_sp
  372 00000000                 IMPORT           Dummy_Handler
  373 00000000                 IMPORT           HardFault_Handler
  374 00000000         __Vectors
  375 00000000         ;ARM core vectors
  376 00000000 00000000        DCD              __initial_sp ;00:end of stack
  377 00000004 00000000        DCD              Reset_Handler ;01:reset vector
  378 00000008 00000000        DCD              Dummy_Handler ;02:NMI
  379 0000000C 00000000        DCD              HardFault_Handler ;03:hard fault
  380 00000010 00000000        DCD              Dummy_Handler ;04:(reserved)



ARM Macro Assembler    Page 11 Polled Serial I/O


  381 00000014 00000000        DCD              Dummy_Handler ;05:(reserved)
  382 00000018 00000000        DCD              Dummy_Handler ;06:(reserved)
  383 0000001C 00000000        DCD              Dummy_Handler ;07:(reserved)
  384 00000020 00000000        DCD              Dummy_Handler ;08:(reserved)
  385 00000024 00000000        DCD              Dummy_Handler ;09:(reserved)
  386 00000028 00000000        DCD              Dummy_Handler ;10:(reserved)
  387 0000002C 00000000        DCD              Dummy_Handler ;11:SVCall (supervisor call)
  388 00000030 00000000        DCD              Dummy_Handler ;12:(reserved)
  389 00000034 00000000        DCD              Dummy_Handler ;13:(reserved)
  390 00000038 00000000        DCD              Dummy_Handler ;14:PendableSrvReq (pendable request 
  391 0000003C         ;   for system service)
  392 0000003C 00000000        DCD              Dummy_Handler ;15:SysTick (system tick timer)
  393 00000040 00000000        DCD              Dummy_Handler ;16:DMA channel 0 xfer complete/error
  394 00000044 00000000        DCD              Dummy_Handler ;17:DMA channel 1 xfer complete/error
  395 00000048 00000000        DCD              Dummy_Handler ;18:DMA channel 2 xfer complete/error
  396 0000004C 00000000        DCD              Dummy_Handler ;19:DMA channel 3 xfer complete/error
  397 00000050 00000000        DCD              Dummy_Handler ;20:(reserved)
  398 00000054 00000000        DCD              Dummy_Handler ;21:command complete; read collision
  399 00000058 00000000        DCD              Dummy_Handler ;22:low-voltage detect;
  400 0000005C         ;   low-voltage warning
  401 0000005C 00000000        DCD              Dummy_Handler ;23:low leakage wakeup
  402 00000060 00000000        DCD              Dummy_Handler ;24:I2C0
  403 00000064 00000000        DCD              Dummy_Handler ;25:I2C1
  404 00000068 00000000        DCD              Dummy_Handler ;26:SPI0 (all IRQ sources)
  405 0000006C 00000000        DCD              Dummy_Handler ;27:SPI1 (all IRQ sources)
  406 00000070 00000000        DCD              Dummy_Handler ;28:UART0 (status; error)
  407 00000074 00000000        DCD              Dummy_Handler ;29:UART1 (status; error)
  408 00000078 00000000        DCD              Dummy_Handler ;30:UART2 (status; error)
  409 0000007C 00000000        DCD              Dummy_Handler ;31:ADC0
  410 00000080 00000000        DCD              Dummy_Handler ;32:CMP0
  411 00000084 00000000        DCD              Dummy_Handler ;33:TPM0
  412 00000088 00000000        DCD              Dummy_Handler ;34:TPM1
  413 0000008C 00000000        DCD              Dummy_Handler ;35:TPM2
  414 00000090 00000000        DCD              Dummy_Handler ;36:RTC (alarm)
  415 00000094 00000000        DCD              Dummy_Handler ;37:RTC (seconds)
  416 00000098 00000000        DCD              Dummy_Handler ;38:PIT (all IRQ sources)
  417 0000009C 00000000        DCD              Dummy_Handler ;39:I2S0
  418 000000A0 00000000        DCD              Dummy_Handler ;40:USB0
  419 000000A4 00000000        DCD              Dummy_Handler ;41:DAC0
  420 000000A8 00000000        DCD              Dummy_Handler ;42:TSI0
  421 000000AC 00000000        DCD              Dummy_Handler ;43:MCG
  422 000000B0 00000000        DCD              Dummy_Handler ;44:LPTMR0



ARM Macro Assembler    Page 12 Polled Serial I/O


  423 000000B4 00000000        DCD              Dummy_Handler ;45:Segment LCD
  424 000000B8 00000000        DCD              Dummy_Handler ;46:PORTA pin detect
  425 000000BC 00000000        DCD              Dummy_Handler ;47:PORTC and PORTD pin detect
  426 000000C0         __Vectors_End
  427 000000C0 000000C0 
                       __Vectors_Size
                               EQU              __Vectors_End - __Vectors
  428 000000C0                 ALIGN
  429 000000C0         ;****************************************************************
  430 000000C0         ;Constants
  431 000000C0                 AREA             MyConst,DATA,READONLY
  432 00000000         ;>>>>> begin constants here <<<<<
  433 00000000         ;>>>>>   end constants here <<<<<
  434 00000000                 ALIGN
  435 00000000         ;****************************************************************
  436 00000000         ;Variables
  437 00000000                 AREA             MyData,DATA,READWRITE
  438 00000000         ;>>>>> begin variables here <<<<<
  439 00000000         ;>>>>>   end variables here <<<<<
  440 00000000                 ALIGN
  441 00000000                 END
Command Line: --debug --length=49 --width=120 --diag_suppress=9931 --cpu=Cortex-M0+ --apcs=interwork --depend=.\objects\
exercise05.d -o.\objects\exercise05.o -I.\RTE\_Target_1 -IC:\Keil_v5\ARM\PACK\Keil\Kinetis_KLxx_DFP\1.13.0\Device\Includ
e -IC:\Keil_v5\ARM\CMSIS\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 524" --predefine="MKL46
Z256xxx4 SETA 1" --list=.\listings\exercise05.lst exercise05.s
