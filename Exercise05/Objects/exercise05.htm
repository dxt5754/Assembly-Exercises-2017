<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\exercise05.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\exercise05.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060528: Last Updated: Tue Oct 03 10:55:29 2017
<BR><P>
<H3>Maximum Stack Usage =          0 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>

<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[3]">PutChar</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">Dummy_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">Dummy_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1]">Dummy_Handler</a> from start.o(Start) referenced 45 times from exercise05.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from start.o(Start) referenced from exercise05.o(RESET)
 <LI><a href="#[3]">PutChar</a> from exercise05.o(MyCode) referenced from exercise05_lib.o(Exercise05_Lib)
 <LI><a href="#[4]">Reset_Handler</a> from exercise05.o(MyCode) referenced from exercise05.o(RESET)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[5]"></a>Carry</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, exercise05_lib.o(Exercise05_Lib))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutString
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutCRLF
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
</UL>

<P><STRONG><a name="[8]"></a>Negative</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, exercise05_lib.o(Exercise05_Lib))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutString
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutCRLF
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
</UL>

<P><STRONG><a name="[9]"></a>Overflow</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, exercise05_lib.o(Exercise05_Lib))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutString
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutCRLF
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
</UL>

<P><STRONG><a name="[a]"></a>PutPrompt</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, exercise05_lib.o(Exercise05_Lib))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutString
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
</UL>

<P><STRONG><a name="[b]"></a>Zero</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, exercise05_lib.o(Exercise05_Lib))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutString
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutCRLF
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
</UL>

<P><STRONG><a name="[4]"></a>Reset_Handler</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, exercise05.o(MyCode))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Zero
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Startup
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutPrompt
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Overflow
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Negative
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Carry
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutChar
</UL>

<P><STRONG><a name="[3]"></a>PutChar</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, exercise05.o(MyCode))
<BR><BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> exercise05_lib.o(Exercise05_Lib)
</UL>
<P><STRONG><a name="[c]"></a>Startup</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, start.o(Start))
<BR><BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetClock48MHz
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
</UL>

<P><STRONG><a name="[1]"></a>Dummy_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, start.o(Start))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dummy_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dummy_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> exercise05.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, start.o(Start))
<BR>[Address Reference Count : 1]<UL><LI> exercise05.o(RESET)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[d]"></a>SystemInit</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, start.o(Start))
<BR><BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Startup
</UL>

<P><STRONG><a name="[e]"></a>SetClock48MHz</STRONG> (Thumb, 140 bytes, Stack size 0 bytes, start.o(Start))
<BR><BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Startup
</UL>

<P><STRONG><a name="[6]"></a>PutCRLF</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, exercise05_lib.o(Exercise05_Lib))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutString
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Zero
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Overflow
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Negative
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Carry
</UL>

<P><STRONG><a name="[7]"></a>PutString</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, exercise05_lib.o(Exercise05_Lib))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutCRLF
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Zero
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutPrompt
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Overflow
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Negative
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Carry
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
